version: '3.9'

services:
  frontend:
    container_name: "frontend-dev"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - node-modules:/app/node_modules
    restart: always
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    command: npm run dev

  backend:
    container_name: "backend-dev"
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - '8000:8000'
    entrypoint: /entrypoint.sh

    volumes:
      - static:/backend/static
      - ./backend:/backend
    depends_on:
      - db

  db:
    container_name: "db-dev"
    image: postgres:13.0-alpine
    volumes:
      - ./db_data/:/var/lib/postgresql/data
    user: '999:999'
    environment:
      - POSTGRES_DB="${SQL_DATABASE}"
      - POSTGRES_USER="${SQL_USER}"
      - POSTGRES_PASSWORD="${SQL_PASSWORD}"
    ports:
      - '${SQL_PORT}:5432'

  pgadmin:
    container_name: "pgadmin4-container"
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: spenwong98@gmail.com
      PGADMIN_DEFAULT_PASSWORD: "${SQL_PASSWORD}"
    ports:
      - "5050:80"

  nginx:
    container_name: "nginx-dev"
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static:/static
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  static:
  node-modules:
